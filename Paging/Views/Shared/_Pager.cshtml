@using PagingExampleApp.Helpers
@{
    var currentPage = PagerHelper.GetCurrentPage(Context.Request.Query["page"]);
    var totalCount = PagerHelper.GetTotalPages(Model.PageSize, Model.TotalCount);
    var minPage = PagerHelper.GetMinPageToRender(Model.MaxPages, totalCount, currentPage);
    var maxPage = PagerHelper.GetMaxPageToRender(Model.MaxPages, totalCount, currentPage);
}

@if (currentPage <= maxPage)
{
    <nav aria-label="Page navigation">
        <ul class="pagination justify-content-center">

            <li class="page-item"><a class="page-link" asp-action="@Model.Action" asp-route-page="1" asp-route-search="@Model.Search">First</a></li>

            @if (PagerHelper.ShowLeftPagerButton(Model.MaxPages, totalCount, currentPage))
            {

                <li class="page-item"><a class="page-link" asp-action="@Model.Action" asp-route-page="@(minPage - 1)" asp-route-search="@Model.Search">...</a></li>
            }

            @for (var i = minPage; i <= maxPage; i++)
            {
                if (PagerHelper.IsActivePage(currentPage, i))
                {
                    <li class="page-item active"><a class="page-link" asp-action="@Model.Action" asp-route-page="@i" asp-route-search="@Model.Search">@i</a></li>
                }
                else
                {
                    <li class="page-item"><a class="page-link" asp-action="@Model.Action" asp-route-page="@i" asp-route-search="@Model.Search">@i</a></li>
                }
            }

            @if (PagerHelper.ShowRightPagerButton(Model.MaxPages, totalCount, currentPage))
            {
                <li class="page-item"><a class="page-link" asp-action="@Model.Action" asp-route-page="@(maxPage + 1)" asp-route-search="@Model.Search">...</a></li>
            }

            <li class="page-item"><a class="page-link" asp-action="@Model.Action" asp-route-page="@totalCount" asp-route-search="@Model.Search">Last</a></li>
        </ul>
    </nav>
}